import os

def format_cobol_code_from_text_with_procedure_scope(code_text: str) -> str:
    lines = code_text.strip().split('\n')
    fixed_lines = []
    in_procedure_division = False

    for line in lines:
        line = line.rstrip("\n")
        stripped = line.strip()

        # コメント行や PROCEDURE DIVISION. より前はそのまま出力
        if stripped.startswith("*") or not in_procedure_division:
            fixed_lines.append(line)
            if stripped.upper() == "PROCEDURE DIVISION.":
                in_procedure_division = True
            continue

        # フォーマッタ対象行（PROCEDURE DIVISION以降）
        if re.match(r'^(IF|ELSE|END-IF|EVALUATE|WHEN|END-EVALUATE|PERFORM|END-PERFORM|ADD|SUBTRACT|MULTIPLY|DIVIDE|COMPUTE|STRING|END-STRING|ON SIZE ERROR|NOT ON SIZE ERROR|ON OVERFLOW)', stripped):
            keyword = stripped.split()[0]
            if keyword in {'IF', 'ELSE', 'END-IF', 'EVALUATE', 'WHEN', 'END-EVALUATE',
                           'PERFORM', 'END-PERFORM', 'ADD', 'SUBTRACT', 'MULTIPLY',
                           'DIVIDE', 'COMPUTE', 'STRING', 'END-STRING', 'ON', 'NOT'}:
                indent = 11  # column 12 開始
            else:
                indent = 14  # column 15 開始（条件句など）
            fixed_line = (' ' * indent + stripped).ljust(72)
        else:
            # 通常の命令文（MOVEなど）
            fixed_line = (' ' * 14 + stripped).ljust(72)

        fixed_lines.append(fixed_line)

    return "\n".join(fixed_lines)

# テスト実行用（仮のファイルパス）
input_test_path = "/mnt/data/sample_cobol_input.cbl"
output_test_path = "/mnt/data/sample_cobol_output.cbl"

# ダミーのサンプルコード書き込み（行番号なし）
sample_code = """
* コメント
IDENTIFICATION DIVISION.
PROGRAM-ID. SAMPLE.
DATA DIVISION.
WORKING-STORAGE SECTION.
01 A PIC 9(4).
01 B PIC 9(4).
PROCEDURE DIVISION.
IF A > B
MOVE A TO B
END-IF
PERFORM CALC-ROUTINE
END-PERFORM
"""

with open(input_test_path, "w", encoding="utf-8") as f:
    f.write(sample_code.strip())

# 関数実行
format_cobol_code(input_test_path, output_test_path)

# 結果表示
with open(output_test_path, "r", encoding="utf-8") as f:
    formatted_result = f.read()

formatted_result
